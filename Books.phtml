<script>
    function logout() {
        var a = confirm("Do you want to logout?");
        if (a) {
            window.location.href = "fenetre.php";
        } else {
            return false;
        }
    }
</script>
<style>
    /* Général pour le formulaire */
    form#bookForm {
        max-width: 400px;
        margin: 20px auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
    }

    /* Style des champs */
    form#bookForm fieldset {
        border: none;
        padding: 0;
    }

    form#bookForm label {
        display: block;
        margin-bottom: 6px;
        font-weight: bold;
        color: #333;
    }

    form#bookForm input[type="text"],
    form#bookForm select {
        width: 100%;
        padding: 8px 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 14px;
        background-color: #fff;
        color: #333;
        box-sizing: border-box;
        transition: border-color 0.3s ease;
    }

    form#bookForm input[type="text"]:focus,
    form#bookForm select:focus {
        border-color: #007BFF;
        outline: none;
        box-shadow: 0 0 4px rgba(0, 123, 255, 0.25);
    }

    /* Messages d'erreur */
    .error-message {
        color: #d9534f;
        font-size: 12px;
        margin-top: -8px;
        margin-bottom: 10px;
        display: block;
    }

    /* Actions du formulaire */
    .form-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    form#bookForm button {
        padding: 10px 20px;
        font-size: 14px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    form#bookForm button#submitBookBtn {
        background-color: #28a745;
        color: #fff;
    }

    form#bookForm button#submitBookBtn:hover {
        background-color: #218838;
    }

    form#bookForm button.secondary {
        background-color: #6c757d;
        color: #fff;
    }

    form#bookForm button.secondary:hover {
        background-color: #5a6268;
    }

    #bookForm {
        position: relative;
        top: -600px;
    }

    .books-list table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    .books-list table th,
    .books-list table td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
    }

    .books-list table th {
        background-color: #f4f4f4;
        font-weight: bold;
    }

    .books-list table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .books-list table img {
        border-radius: 4px;
    }

    .form-container {
        display: none;
        /* Initially hidden */
        margin-top: 20px;
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 5px;
        background-color: #f9f9f9;
        width: 300px;
    }

    button {
        padding: 10px 20px;
        background-color: #007BFF;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    button:hover {
        background-color: #0056b3;
    }

    label {
        display: block;
        margin-bottom: 10px;
        font-weight: bold;
    }

    input {
        width: 100%;
        padding: 8px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .member-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 20px;
    }

    .member-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        width: 250px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .member-info p {
        margin: 5px 0;
        font-size: 14px;
    }

    .actions {
        margin-top: 10px;
        display: flex;
        justify-content: space-between;
    }

    .edit-btn,
    .delete-btn {
        padding: 5px 10px;
        text-decoration: none;
        font-size: 12px;
        border-radius: 4px;
        color: white;
        background-color: #007BFF;
        transition: background-color 0.3s ease;
    }

    .delete-btn {
        background-color: #dc3545;
    }

    .edit-btn:hover {
        background-color: #0056b3;
    }

    .delete-btn:hover {
        background-color: #c82333;
    }

    .books-list {
        display: block;
    }

    .member-cards {
        display: flex;
        flex-wrap: wrap;
        /* Allows wrapping if there are too many cards */
        gap: 20px;
        /* Space between cards */
        justify-content: flex-start;
        /* Align cards to the start */
        margin-top: 20px;
    }

    .member-card {
        flex: 1 1 calc(25% - 20px);
        /* Flexible width: takes 25% of the container minus gap */
        max-width: calc(25% - 20px);
        /* Max width for each card */
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    /* Ensure images scale properly */
    .member-card .profile-photo img {
        width: 100%;
        height: auto;
        border-radius: 4px;
    }

    .books-list {
        width: 800px;
    }
    .form-container {
    display: none;
    opacity: 0;
    transform: scale(0.9);
    margin-top: 20px;
    border: 1px solid #ccc;
    padding: 20px;
    border-radius: 5px;
    background-color: #f9f9f9;
    width: 300px;
    transition: all 0.3s ease-in-out; /* Add transition effect */
}

.form-container.show {
    display: block;
    opacity: 1;
    transform: scale(1); /* Full size */
}
.form-container.show {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.member-card {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
    transition: all 0.4s ease-in-out; /* Smooth transition */
}

.member-card.visible {
    opacity: 1;
    transform: translateY(0) scale(1);
}

.member-card.hidden {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
    pointer-events: none; /* Ensure it can't be interacted with */
    position: absolute; /* Optional: Prevent hidden cards from affecting layout */
}
#formContainer{
    position: relative;
    left:600px;
    width: 410px;
    height: 700px;
    top: -600px;
}
#bookForm{
    position: relative;
    top:-30px;
    left: -20px;
    width: 700px;
}
/* Dark mode styles */
body.dark-mode {
    background-color: #121212;
    color: #ffffff;
}

body.dark-mode form#bookForm {
    background-color: #1e1e1e;
    border-color: #333;
}

body.dark-mode form#bookForm label {
    color: #ffffff;
}

body.dark-mode form#bookForm input,
body.dark-mode form#bookForm select {
    background-color: #2c2c2c;
    color: #ffffff;
    border-color: #444;
}

body.dark-mode form#bookForm button {
    background-color: #007BFF;
    color: #ffffff;
}

body.dark-mode form#bookForm button#submitBookBtn {
    background-color: #0066cc;
}

body.dark-mode form#bookForm button.secondary {
    background-color: #555;
}

/* For general text and other elements */
body.dark-mode .member-card {
    background-color: #1e1e1e;
    border-color: #333;
    color: #fff;
}

body.dark-mode .books-list table th,
body.dark-mode .books-list table td {
    background-color: #1e1e1e;
    border-color: #444;
    color: #fff;
}

/* Hover effect for member cards */
.member-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Hover state */
.member-card:hover {
    transform: scale(1.05); /* Slightly scale up the card */
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2); /* Add a subtle shadow */
}

/* Optional: A smooth transition when the card is not hovered */
.member-card.visible {
    transition: transform 0.3s ease, opacity 0.3s ease;
}
/* Styling for Edit and Delete buttons */
.actions .edit-btn,
.actions .delete-btn {
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 14px;
    text-decoration: none;
    color: white;
    display: inline-block;
    text-align: center;
    width: 100px;
    margin: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

/* Edit button styles */
.actions .edit-btn {
    background-color: #28a745; /* Green for Edit */
    border: 1px solid #28a745;
}

.actions .edit-btn:hover {
    background-color: #218838;
    border-color: #1e7e34;
    transform: translateY(-2px); /* Slight hover lift */
}

/* Delete button styles */
.actions .delete-btn {
    background-color: #dc3545; /* Red for Delete */
    border: 1px solid #dc3545;
}

.actions .delete-btn:hover {
    background-color: #c82333;
    border-color: #bd2130;
    transform: translateY(-2px); /* Slight hover lift */
}

/* Focus styles for accessibility */
.actions .edit-btn:focus,
.actions .delete-btn:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.5); /* Light blue outline on focus */
}
.member-cards{
    width: 1200px;
}
/* Style for the file input (image upload) */
input[type="file"] {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: #fff;
    font-size: 14px;
    cursor: pointer;
}

input[type="file"]:focus {
    border-color: #007BFF;
    outline: none;
    box-shadow: 0 0 4px rgba(0, 123, 255, 0.25);
}

/* Style for the uploaded image preview (if you want to show the selected image) */
.image-preview {
    margin-top: 10px;
    max-width: 100%;
    height: auto;
    border-radius: 4px;
    display: none;
}

/* Optional: Custom file input label for better styling */
.file-upload-wrapper {
    position: relative;
    display: inline-block;
}

.file-upload-wrapper input[type="file"] {
    display: none; /* Hide default file input */
}

.file-upload-wrapper label {
    padding: 10px 20px;
    background-color: #007BFF;
    color: white;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.file-upload-wrapper label:hover {
    background-color: #0056b3;
}


</style>

<div class="container">
    <!-- Sidebar Section -->
    <aside>
        <div class="toggle">
            <div class="logo">
                <img src="images/logo.png">
                <h2>Library<span class="danger">Manager</span></h2>
            </div>
            <div class="close" id="close-btn">
                <span class="material-icons-sharp">close</span>
            </div>
        </div>

        <div class="sidebar">
            <a href="dashbord.php">
                <span class="material-icons-sharp">dashboard</span>
                <h3>Dashboard</h3>
            </a>
            <a href="Books.php" class="active">
                <span class="material-icons-sharp">book</span>
                <h3>Books</h3>
            </a>
            <a href="members.php">
                <span class="material-icons-sharp">person_outline</span>
                <h3>Members</h3>
            </a>
            <a href="Borrow and return/borrow.php" >
                    <span class="material-icons-sharp">sync_alt</span>
                    <h3>Borrow/Return</h3>
                </a>
            <a href="#" onclick="logout()">
                <span class="material-icons-sharp">logout</span>
                <h3>Logout</h3>
            </a>
        </div>
    </aside>
    <!-- End of Sidebar Section -->

    <!-- Main Content -->
    <main>
        <div class="header">
            <h1>Books Collection</h1>
            <div class="actions">
                <div class="search-container">
                    <input type="text" id="searchInput" placeholder="Search books...">
                    <span class="material-icons-sharp">search</span>
                </div>
                <button class="add-book-btn" onclick="toggleForm()">
                    <span class="material-icons-sharp">add</span>
                    Add New Book
                </button>
            </div>
        </div>

        <!-- Filters -->
        <div class="filters">
            <select id="categoryFilter">
                <option value="">All Categories</option>
                <option value="fiction">Fiction</option>
                <option value="non-fiction">Non-Fiction</option>
                <option value="science">Science</option>
                <option value="history">History</option>
            </select>
            <select id="availabilityFilter">
                <option value="">All Status</option>
                <option value="available">Available</option>
                <option value="borrowed">Borrowed</option>
            </select>
        </div>

        <div class="books-grid">
    <div class="member-list">
        <h2>List of Books</h2>

        <!-- Search and Filter Controls -->
    

    <div class="books-list">
            <h2>Books Collection</h2>
            <div class="member-cards" id="booksContainer">
    <?php if (!empty($books)): ?>
        <?php foreach ($books as $book): ?>
<div class="member-card" 
    data-title="<?=$book['title'] ?>" 
    data-author="<?=$book['author'] ?>" 
    data-category="<?=$book['genre'] ?>"
    data-status="<?=$book['available_copies'] ?>">
    <div class="profile-photo">
        <?php if (!empty($book['cover_image']) && file_exists($book['cover_image'])): ?>
            <img src="<?=$book['cover_image'] ?>" alt="Book Cover" />
        <?php else: ?>
            <img src="images/default-cover.jpg" alt="Default Cover" />
        <?php endif; ?>
    </div>
    <div class="member-info">
        <p><strong>ID:</strong> <?=$book['id'] ?></p>
        <p><strong>Title:</strong> <?=$book['title'] ?></p>
        <p><strong>Author:</strong> <?=$book['author'] ?></p>
        <p><strong>Genre:</strong> <?=$book['genre'] ?></p>
        <p><strong>Total Copies:</strong> <?=$book['total_copies'] ?></p>
        <p><strong>summary:</strong> <?=$book['summary'] ?></p>
        <p><strong>Status:</strong> <?=$book['available_copies'] ?></p> <!-- Display status -->
    </div>
    <div class="actions">
        <form action="edit_book.php" method="get" style="display: inline;">
            <input type="hidden" name="id" value="<?= $book['id']; ?>">
            <button type="submit">Edit</button>
        </form>
        <form action="delete_book.php" method="post" style="display: inline;">
            <input type="hidden" name="id" value="<?= $book['id']; ?>">
            <button class="delete-btn" type="submit"
                onclick="return confirm('Are you sure you want to delete this book?');">Delete</button>
        </form>
    </div>
</div>
<?php endforeach; ?>

    <?php else: ?>
    <p>No books found.</p>
    <?php endif; ?>
</div>

        </div>
    </div>
</div>

    </main>
    <!-- End of Main Content -->

    <!-- Right Section -->
    <div class="right-section">
        <div class="nav">
            <button id="menu-btn">
                <span class="material-icons-sharp">menu</span>
            </button>
            <div class="dark-mode">
                <span class="material-icons-sharp active">light_mode</span>
                <span class="material-icons-sharp">dark_mode</span>
            </div>

            <div class="profile">
                <div class="info">
                    <p>Hey, <b>Admin</b></p>
                    <small class="text-muted">Admin</small>
                </div>
                <div class="profile-photo">
                    <img src="images/profile-1.jpg">
                </div>
            </div>
        </div>

        <!-- Notifications for Borrow/Return -->

        <!-- End of Borrow/Return Notifications -->

    </div>


</div>
<div class="form-container" id="formContainer">
<form id="bookForm" action="add.php" method="post" enctype="multipart/form-data">
    <label for="title">Book Title:</label>
    <input type="text" id="title" name="title" required>
    
    <label for="author">Author:</label>
    <input type="text" id="author" name="author" required>

    <label for="samuray">Summary:</label>
    <textarea name="samuray" id="samuray" required></textarea>

    <label for="availble_copies">Available Copies:</label>
    <input type="number" id="availble_copies" name="availble_copies" required>

    <label for="category">Category:</label>
    <select id="category" name="category" required>
        <option value="">Select Category</option>
        <option value="fiction">Fiction</option>
        <option value="non-fiction">Non-Fiction</option>
        <option value="science">Science</option>
        <option value="history">History</option>
        <option value="fantasy">Fantasy</option>
    </select>

    <label for="status">Status:</label>
    <select id="status" name="status" required>
        <option value="">Select Status</option>
        <option value="available">Available</option>
        <option value="borrowed">Borrowed</option>
    </select>

    <label for="cover_image">Cover Image:</label>
    <input type="file" id="cover_image" name="cover_image" accept="image/*" required>

    <div class="form-actions">
        <button type="submit" id="submitBookBtn">Submit</button>
        <button type="button" class="secondary" id="cancelBookBtn">Cancel</button>
    </div>
</form>

   

</div>


   
    <script>
  function toggleForm() {
    const formContainer = document.getElementById('formContainer');
    const memberCards = document.querySelector('.member-cards');

    if (!formContainer.classList.contains('show')) {
        formContainer.style.display = "block"; // Ensure the form is visible before animating
        setTimeout(() => formContainer.classList.add('show'), 10); // Add class after display
        if (memberCards) memberCards.style.display = "none"; // Hide member cards
    } else {
        formContainer.classList.remove('show'); // Start animation to hide
        setTimeout(() => {
            formContainer.style.display = "none"; // Hide after animation completes
            if (memberCards) memberCards.style.display = "flex"; // Show member cards
        }, 400); // Match transition duration
    }
}



        document.addEventListener("DOMContentLoaded", function () {
    const searchBar = document.getElementById("searchInput");
    const categoryFilter = document.getElementById("categoryFilter");
    const statusFilter = document.getElementById("availabilityFilter");
    const booksContainer = document.getElementById("booksContainer");
    const bookCards = booksContainer.querySelectorAll(".member-card");

    // Function to filter books
    function filterBooks() {
        const searchQuery = searchBar.value.toLowerCase();
        const selectedCategory = categoryFilter.value;
        const selectedStatus = statusFilter.value;

        bookCards.forEach(card => {
            const title = card.dataset.title.toLowerCase();
            const author = card.dataset.author.toLowerCase();
            const category = card.dataset.category;
            const status = card.dataset.status;

            // Match criteria
            const matchesSearch = title.includes(searchQuery) || author.includes(searchQuery);
            const matchesCategory = selectedCategory === "" || category === selectedCategory;
            const matchesStatus = selectedStatus === "" || status === selectedStatus;

            // Show or hide the card with animations
            if (matchesSearch && matchesCategory && matchesStatus) {
                card.classList.add("visible");
                card.classList.remove("hidden");
            } else {
                card.classList.add("hidden");
                card.classList.remove("visible");
            }
        });
    }

    // Event listeners for input and filter changes
    searchBar.addEventListener("input", filterBooks);
    categoryFilter.addEventListener("change", filterBooks);
    statusFilter.addEventListener("change", filterBooks);

    // Initial filter on page load
    filterBooks();
});
document.addEventListener("DOMContentLoaded", function () {
    const darkModeToggle = document.querySelector(".dark-mode");
    const body = document.body;

    darkModeToggle.addEventListener("click", function () {
        body.classList.toggle("dark-mode");
    });
});




    
    </script>
    <script src="orders.js"></script>
    <script src="index.js"></script>